const {
    SlashCommandBuilder
} = require("@discordjs/builders");
const {
    EmbedBuilder,
    ActionRowBuilder,
    ButtonBuilder,
    ButtonStyle,
    ChannelType,
    Events,
    StringSelectMenuBuilder,
    ButtonInteraction,
    PermissionsField,
    PermissionsBitField,
    AttachmentBuilder,
} = require("discord.js");
const fs = require('fs');

module.exports = {
    data: new SlashCommandBuilder()
        .setName("setup-ticket")
        .setDescription("vytvo≈ôen√≠ zadosti o tiket"),
    async execute(interaction, client) {
        if (
            !interaction.member.permissions.has(
                PermissionsBitField.Flags.Administrator
            )
        )
            return await interaction.reply({
                ephemeral: true,
                content: "Mus√≠≈° m√≠t vƒõt≈°√≠ pr√°va na vyvol√°n√≠ p≈ô√≠kazu",
            });
        else {
            await interaction.reply({
                ephemeral: true,
                content: "Zpr√°va byla posl√°na",
            });
        }
        //vytvo≈ôen√≠ menu
        const channelb = client.channels.cache.get('1076610726438912151');
        const row = new ActionRowBuilder()
            .addComponents(
                new StringSelectMenuBuilder()
                .setCustomId('select')
                .setPlaceholder('nic nevybr√°no')
                .addOptions([{
                        label: 'Ot√°zka',
                        emoji: '‚ùì',
                        description: 'Pro zpr√°vu o pomoc.',
                        value: 'otazka',
                    },
                    {
                        label: 'Nahl√°≈°en√≠ bug≈Ø',
                        emoji: 'üêû',
                        description: 'Pro nahl√°≈°en√≠ chyb.',
                        value: 'bug',
                    },
                    {
                        label: 'Probl√©my s VIP',
                        emoji: 'üí¨',
                        description: 'Pro nahl√°≈°en√≠ probl√©mu s VIP.',
                        value: 'vip',
                    },
                    {
                        label: 'Nahl√°≈°en√≠ Hr√°ƒçe',
                        emoji: 'üôç‚Äç‚ôÇÔ∏è',
                        description: 'Pro nahl√°≈°en√≠ hr√°ƒçe',
                        value: 'nahlaseni',
                    },
                    {
                        label: 'N√°bor da AT',
                        emoji: 'üè¢',
                        description: 'Pro n√°bor do A-Teamu.',
                        value: 'at',
                    },
                    {
                        label: 'Speci√°ln√≠ po≈æadavky',
                        emoji: 'ü™î',
                        description: 'Pro speci√°ln√≠ po≈æadavek.',
                        value: 'special',
                    },
                ]),
            );
        const embed = new EmbedBuilder()
            .setColor("#0099ff")
            .setTitle("Gaming Kingdom - Tikety")
            .setDescription(`Jsme zvƒõdavi, co Tƒõ zav√°d√≠ a≈æ sem üôÇ. Proto nev√°hej vytvo≈ôit ticket. Jen p≈ôed vytvo≈ôen√≠m ticketu pros√≠m vyber spr√°vnou kategorii.`)
            .addFields({
                name: "__Ot√°zka__",
                value: "Univerz√°ln√≠ ticket, v p≈ô√≠padƒõ jak√©hokoliv probl√©mu, nap≈ô. ztr√°ta item≈Ø, atd. ...",
                inline: false
            }, {
                name: "__Bugy/Chyby__",
                value: "Pro nahla≈°ov√°n√≠ chyb/bug≈Ø na mapƒõ ƒçi plugin≈Ø.",
                inline: false
            }, {
                name: "__Probl√©my s VIP__",
                value: "Pro nahla≈°ov√°n√≠ probl√©m≈Ø s VIP.",
                inline: false
            }, {
                name: "__Nahl√°≈°en√≠ hr√°ƒçe__",
                value: "Pro nahla≈°ov√°n√≠ hr√°ƒç≈Ø, kte≈ô√≠ podv√°d√≠.",
                inline: false
            }, {
                name: "__N√°bor da AT__",
                value: "Pro pokus o n√°bor do AT.",
                inline: false
            }, {
                name: "__Speci√°ln√≠ po≈æadavky__",
                value: "Pro speci√°ln√≠ po≈æadavky od AT",
                inline: false
            })
            .setFooter({
                text: 'Gaming Kingdom ¬©2023'
            });
        await channelb.send({
            embeds: [embed],
            components: [row]
        });
        const collector = await interaction.channel.createMessageComponentCollector();

        collector.on("collect", async (i) => {
            await i.update({
                embeds: [embed],
                components: [row]
            });
            //vytvo≈ôen√≠ m√≠stnosti - nedodƒõl√°n√©
            const channel = await interaction.guild.channels.create({
                name: `${i.values[0]} - ${i.user.username}`,
                type: ChannelType.GuildText,
                parent: "1089184586933731458",
            });

            channel.permissionOverwrites.create(i.user.id, {
                ViewChannel: true,
                SendMessages: true,
            });
            channel.permissionOverwrites.create(channel.guild.roles.everyone, {
                ViewChannel: false,
                SendMessages: false,
            });
            const name = channel.name;
            const id = channel.id;

            const channelID = '1076927763635781774';
            const mChannel = channel.guild.channels.cache.get(channelID);

            const embedt = new EmbedBuilder()
                .setColor('Red')
                .setTitle('Tiket vytvo≈ôen')
                .addFields({
                    name: 'N√°zev m√≠stnosti',
                    value: `${name} (<#${id}>)`,
                    inline: false
                })
                .addFields({
                    name: 'Typ Ticketu',
                    value: `${i.values[0]}`,
                    inline: false
                })
                .addFields({
                    name: 'Vytvo≈ôil',
                    value: `${i.user}`,
                    inline: false
                })
                .setTimestamp()
                .setFooter({
                    text: 'Gaming Kingdom ¬©2023'
                })

            mChannel.send({
                embeds: [embedt]
            })

            // Tlac√≠tko uzav≈ôen√≠ - redirect na jiny server

            const Closebutton = new ActionRowBuilder().addComponents(
                new ButtonBuilder()
                .setCustomId("button")
                .setEmoji("‚õî")
                .setLabel("Zav≈ô√≠t")
                .setStyle(ButtonStyle.Danger)
            );

            // jednotliv√© tikety vzor
            if (i.values[0] == "otazka") {
                const embeded = new EmbedBuilder()
                    .setColor('#0099ff')
                    .setTitle('Nov√Ω tiket vytvo≈ôen')
                    .setDescription(`Tv≈Øj tiket byl vytvoƒçen. Zeptej se na co pot≈ôebuje≈°`);
                await channel.send({
                    content: `${i.user}`,
                    embeds: [embeded],
                    components: [Closebutton]
                });
            } else if (i.values[0] == "bug") {
                const embeded = new EmbedBuilder()
                    .setColor('#0099ff')
                    .setTitle('Nov√Ω tiket vytvo≈ôen')
                    .setDescription(`Tv≈Øj tiket byl vytvoƒçen. zdel frakci`);
                await channel.send({
                    content: `${i.user}`,
                    embeds: [embeded],
                    components: [Closebutton]
                });
            } else if (i.values[0] == "vip") {
                const embeded = new EmbedBuilder()
                    .setColor('#0099ff')
                    .setTitle('Nov√Ω tiket vytvo≈ôen')
                    .setDescription(`Tv≈Øj tiket byl vytvoƒçen. Zdƒõl n√°m chybu`);
                await channel.send({
                    content: `${i.user}`,
                    embeds: [embeded],
                    components: [Closebutton]
                });
            } else if (i.values[0] == "nahlaseni") {
                const embeded = new EmbedBuilder()
                    .setColor('#0099ff')
                    .setTitle('Nov√Ω tiket vytvo≈ôen')
                    .setDescription(`Tv≈Øj tiket byl vytvoƒçen. Zdƒõl n√°m chybu`);
                await channel.send({
                    content: `${i.user}`,
                    embeds: [embeded],
                    components: [Closebutton]
                });
            } else if (i.values[0] == "at") {
                const embeded = new EmbedBuilder()
                    .setColor('#0099ff')
                    .setTitle('Nov√Ω tiket vytvo≈ôen')
                    .setDescription(`Tv≈Øj tiket byl vytvoƒçen. Zdƒõl n√°m chybu`);
                await channel.send({
                    content: `${i.user}`,
                    embeds: [embeded],
                    components: [Closebutton]
                });
            } else if (i.values[0] == "special") {
                const embeded = new EmbedBuilder()
                    .setColor('#0099ff')
                    .setTitle('Nov√Ω tiket vytvo≈ôen')
                    .setDescription(`Tv≈Øj tiket byl vytvoƒçen. Zdƒõl n√°m chybu`);
                await channel.send({
                    content: `${i.user}`,
                    embeds: [embeded],
                    components: [Closebutton]
                });
            }
            const buttonCollector = await channel.createMessageComponentCollector();
            buttonCollector.on('collect', async (y) => {

                await channel.delete();
                const embedh = new EmbedBuilder()
                    .setColor('Red')
                    .setTitle('Tiket uzav≈ôen')
                    .addFields({
                        name: 'N√°zev m√≠stnosti',
                        value: `${name}`,
                        inline: false
                    })
                    .addFields({
                        name: 'Stav Ticketu',
                        value: `uzav≈ôen`,
                        inline: false
                    })
                    .addFields({
                        name: 'Vytvo≈ôil',
                        value: `${i.user}`,
                        inline: true
                    })
                    .addFields({
                        name: 'Uzav≈ôel',
                        value: `${y.user}`,
                        inline: true
                    })
                    .setTimestamp()
                    .setFooter({
                        text: 'Gaming Kingdom ¬©2023'
                    })

                mChannel.send({
                    embeds: [embedh]
                })

                buttonCollector.stop();
            });

        });
    },
};